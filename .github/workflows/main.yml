name: Build Fdroid APKs and Unsigned Release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -XX:MaxMetaspaceSize=1g" -Dkotlin.daemon.jvm.options="-Xmx2560m"
  CI_GRADLE_ARG_PROPERTIES: --stacktrace --max-workers 2 --no-daemon

jobs:
  # Job to build unsigned universal release APK (for analysis or further signing)
  build-unsigned-release:
    name: Build unsigned universal release APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Clean and assemble unsigned release APK
        run: |
          ./gradlew clean assembleFdroidRelease $CI_GRADLE_ARG_PROPERTIES

      - name: Upload unsigned APK
        uses: actions/upload-artifact@v4
        with:
          name: vector-fdroid-universal-release-unsigned
          path: |
            vector-app/build/outputs/apk/fdroid/release/*.apk

  # Job to build signed per-ABI Fdroid APKs
  build-signed-fdroid:
    name: Build signed Fdroid APK for ${{ matrix.abi }}
    runs-on: ubuntu-latest
    needs: build-unsigned-release
    strategy:
      fail-fast: false
      matrix:
        abi: ["armeabi-v7a", "arm64-v8a", "x86_64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Write signing key from secret
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE }}" | base64 --decode > release.keystore

      - name: Set up signing config
        run: |
          cat <<EOF >> local.properties
          fdroid.storeFile=\$PWD/release.keystore
          fdroid.keyAlias=${{ secrets.SIGNING_ALIAS }}
          fdroid.storePassword=${{ secrets.SIGNING_STOREPASS }}
          fdroid.keyPassword=${{ secrets.SIGNING_KEYPASS }}
          EOF

      - name: Convert ABI to proper case
        id: abi_case_conversion
        run: |
          abi="${{ matrix.abi }}"
          abi_proper_case="$(tr '[:lower:]' '[:upper:]' <<< ${abi:0:1})${abi:1}"
          echo "::set-output name=abi_proper_case::$abi_proper_case"

      - name: Build signed Fdroid APK for ${{ matrix.abi }}
        run: |
          ./gradlew clean assembleFdroid${{ steps.abi_case_conversion.outputs.abi_proper_case }}Release $CI_GRADLE_ARG_PROPERTIES

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: vector-fdroid-${{ matrix.abi }}-release
          path: |
            vector-app/build/outputs/apk/fdroid/release/*${{ matrix.abi }}*.apk
